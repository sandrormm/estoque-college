-- RODAR O SCRIPT EM UM USUARIO QUE TENHA PERMISSAO DE DBA
CREATE LOGIN administrator   
    WITH PASSWORD = '1234';
CREATE USER administrator FOR LOGIN administrator ;  
GRANT ALL TO administrator;
CREATE DATABASE ControleEstoque;

CREATE TABLE PAIS (
  idPAIS INT NOT NULL IDENTITY,
  NOME_PAIS VARCHAR(100) NOT NULL,
  SIGLA_PAIS CHAR(3) NOT NULL,
  PRIMARY KEY(idPAIS)
);

CREATE TABLE ESTADO (
  idESTADO INT NOT NULL IDENTITY,
  PAIS_idPAIS INT NOT NULL,
  NOME_ESTADO VARCHAR(50) NOT NULL,
  UF CHAR(2) NOT NULL,
  PRIMARY KEY(idESTADO),
  FOREIGN KEY(PAIS_idPAIS)
    REFERENCES PAIS(idPAIS)
);

CREATE TABLE CIDADE (
  idCIDADE INT NOT NULL IDENTITY,
  ESTADO_idESTADO INT NOT NULL,
  NOME_CIDADE VARCHAR(100) NOT NULL,
  PRIMARY KEY(idCIDADE),
  FOREIGN KEY(ESTADO_idESTADO)
    REFERENCES ESTADO(idESTADO)
);

CREATE TABLE BAIRRO (
  idBAIRRO INT NOT NULL IDENTITY,
  CIDADE_idCIDADE INT NOT NULL,
  NOME_BAIRRO VARCHAR(50) NOT NULL,
  PRIMARY KEY(idBAIRRO),
  FOREIGN KEY(CIDADE_idCIDADE)
    REFERENCES CIDADE(idCIDADE)
);

CREATE TABLE LOGRADOURO (
  idLOGRADOURO INT NOT NULL IDENTITY,
  BAIRRO_idBAIRRO INT NOT NULL,
  RUA VARCHAR(150) NOT NULL,
  PRIMARY KEY(idLOGRADOURO),
  FOREIGN KEY(BAIRRO_idBAIRRO)
    REFERENCES BAIRRO(idBAIRRO)
);

CREATE TABLE ENDERECO (
  idENDERECO INT NOT NULL IDENTITY,
  LOGRADOURO_idLOGRADOURO INT NOT NULL,
  CEP INT NOT NULL,
  NUMERO INT NOT NULL,
  COMPLEMENTO VARCHAR(150) NULL,
  REFERENCIA VARCHAR(200) NULL,
  PRIMARY KEY(idENDERECO),
  FOREIGN KEY(LOGRADOURO_idLOGRADOURO)
    REFERENCES LOGRADOURO(idLOGRADOURO)
);

CREATE TABLE TELEFONE (
  idTELEFONE INT NOT NULL IDENTITY,
  FIXO INT NULL,
  CELULAR INT NULL,
  PRIMARY KEY(idTELEFONE)
);

CREATE TABLE USUARIOS (
  idUSUARIO INT NOT NULL IDENTITY,
  LOGIN_USUARIO VARCHAR(100) NOT NULL,
  SENHA_USUARIO VARCHAR(20) NOT NULL,
  PRIMARY KEY(idUSUARIO)
);

CREATE TABLE CLIENTE (
  idCLIENTE INT NOT NULL IDENTITY,
  TELEFONE_idTELEFONE INT NOT NULL,
  ENDERECO_idENDERECO INT NOT NULL,
  NOME_CLIENTE VARCHAR(100) NOT NULL,
  CPF CHAR(11) NOT NULL,
  DATA_NASC DATE NOT NULL,
  EMAIL VARCHAR(50) NULL,
  PRIMARY KEY(idCLIENTE),
  FOREIGN KEY(ENDERECO_idENDERECO)
    REFERENCES ENDERECO(idENDERECO),
  FOREIGN KEY(TELEFONE_idTELEFONE)
    REFERENCES TELEFONE(idTELEFONE)
);

CREATE TABLE FORNECEDOR (
  idFORNECEDOR INT NOT NULL IDENTITY,
  TELEFONE_idTELEFONE INT NOT NULL,
  ENDERECO_idENDERECO INT NOT NULL,
  RAZAO_SOCIAL VARCHAR(100) NOT NULL,
  NOME_FANTASIA VARCHAR(100) NOT NULL,
  CNPJ INT NOT NULL,
  IE INT NOT NULL,
  EMAIL VARCHAR(50) NOT NULL,
  PRIMARY KEY(idFORNECEDOR),
  FOREIGN KEY(ENDERECO_idENDERECO)
    REFERENCES ENDERECO(idENDERECO),
  FOREIGN KEY(TELEFONE_idTELEFONE)
    REFERENCES TELEFONE(idTELEFONE)
);

CREATE TABLE SAIDA (
  idSAIDA INT NOT NULL IDENTITY,
  QNTD_SAIDA INT NOT NULL,
  DATA_SAIDA DATE NOT NULL,
  PRIMARY KEY(idSAIDA)
);

CREATE TABLE ENTRADA (
  idENTRADA INT NOT NULL IDENTITY,
  NF INT NOT NULL,
  QNTD INT NOT NULL,
  VL_UNIT DECIMAL(10,2) NOT NULL,
  VL_TOTAL DECIMAL(10,2) NOT NULL,
  DATA_EMISSAO DATE NOT NULL,
  PRIMARY KEY(idENTRADA)
);

CREATE TABLE PRODUTO (
  idPRODUTO INT NOT NULL IDENTITY,
  NOME_PROD VARCHAR(100) NOT NULL,
  COD_BARRAS INT NOT NULL,
  GRUPO INT NOT NULL,
  UN CHAR(2) NOT NULL,
  PRIMARY KEY(idPRODUTO)
);

CREATE TABLE ESTOQUE (
  idESTOQUE INT NOT NULL IDENTITY,
  PRODUTO_idPRODUTO INT NOT NULL,
  SALDO INT NULL,
  PRIMARY KEY(idESTOQUE),
  FOREIGN KEY(PRODUTO_idPRODUTO)
    REFERENCES PRODUTO(idPRODUTO)
);

CREATE TABLE PRODUTO_has_SAIDA (
  PRODUTO_idPRODUTO INT NOT NULL,
  SAIDA_idSAIDA INT NOT NULL,
  PRIMARY KEY(PRODUTO_idPRODUTO, SAIDA_idSAIDA),
  FOREIGN KEY(PRODUTO_idPRODUTO)
    REFERENCES PRODUTO(idPRODUTO),
  FOREIGN KEY(SAIDA_idSAIDA)
    REFERENCES SAIDA(idSAIDA)
);

CREATE TABLE ENTRADA_has_PRODUTO (
  ENTRADA_idENTRADA INT NOT NULL,
  PRODUTO_idPRODUTO INT NOT NULL,
  PRIMARY KEY(ENTRADA_idENTRADA, PRODUTO_idPRODUTO),
  FOREIGN KEY(ENTRADA_idENTRADA)
    REFERENCES ENTRADA(idENTRADA),
  FOREIGN KEY(PRODUTO_idPRODUTO)
    REFERENCES PRODUTO(idPRODUTO)
);

CREATE TABLE SAIDA_has_CLIENTE (
  SAIDA_idSAIDA INT NOT NULL,
  CLIENTE_idCLIENTE INT NOT NULL,
  PRIMARY KEY(SAIDA_idSAIDA, CLIENTE_idCLIENTE),
  FOREIGN KEY(SAIDA_idSAIDA)
    REFERENCES SAIDA(idSAIDA),
  FOREIGN KEY(CLIENTE_idCLIENTE)
    REFERENCES CLIENTE(idCLIENTE)
);

CREATE TABLE FORNECEDOR_has_ENTRADA (
  FORNECEDOR_idFORNECEDOR INT NOT NULL,
  ENTRADA_idENTRADA INT NOT NULL,
  PRIMARY KEY(FORNECEDOR_idFORNECEDOR, ENTRADA_idENTRADA),
  FOREIGN KEY(FORNECEDOR_idFORNECEDOR)
    REFERENCES FORNECEDOR(idFORNECEDOR),
  FOREIGN KEY(ENTRADA_idENTRADA)
    REFERENCES ENTRADA(idENTRADA)
);
